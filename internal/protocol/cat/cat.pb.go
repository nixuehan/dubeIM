// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: internal/protocol/cat/cat.proto

package cat

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdentifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Token  []byte `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *IdentifyReq) Reset() {
	*x = IdentifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_protocol_cat_cat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifyReq) ProtoMessage() {}

func (x *IdentifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_cat_cat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifyReq.ProtoReflect.Descriptor instead.
func (*IdentifyReq) Descriptor() ([]byte, []int) {
	return file_internal_protocol_cat_cat_proto_rawDescGZIP(), []int{0}
}

func (x *IdentifyReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *IdentifyReq) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type IdentifyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid       int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	RoomID    string `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Heartbeat int64  `protobuf:"varint,4,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
}

func (x *IdentifyResp) Reset() {
	*x = IdentifyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_protocol_cat_cat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentifyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentifyResp) ProtoMessage() {}

func (x *IdentifyResp) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_cat_cat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentifyResp.ProtoReflect.Descriptor instead.
func (*IdentifyResp) Descriptor() ([]byte, []int) {
	return file_internal_protocol_cat_cat_proto_rawDescGZIP(), []int{1}
}

func (x *IdentifyResp) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *IdentifyResp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *IdentifyResp) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *IdentifyResp) GetHeartbeat() int64 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

type HeartbeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid    int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Server string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *HeartbeatReq) Reset() {
	*x = HeartbeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_protocol_cat_cat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReq) ProtoMessage() {}

func (x *HeartbeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_cat_cat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReq.ProtoReflect.Descriptor instead.
func (*HeartbeatReq) Descriptor() ([]byte, []int) {
	return file_internal_protocol_cat_cat_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *HeartbeatReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HeartbeatReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type HeartbeatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatResp) Reset() {
	*x = HeartbeatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_protocol_cat_cat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResp) ProtoMessage() {}

func (x *HeartbeatResp) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_cat_cat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResp.ProtoReflect.Descriptor instead.
func (*HeartbeatResp) Descriptor() ([]byte, []int) {
	return file_internal_protocol_cat_cat_proto_rawDescGZIP(), []int{3}
}

var File_internal_protocol_cat_cat_proto protoreflect.FileDescriptor

var file_internal_protocol_cat_cat_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x61, 0x74, 0x2f, 0x63, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x64, 0x75, 0x62, 0x65, 0x2e, 0x63, 0x61, 0x74, 0x22, 0x3b, 0x0a, 0x0b, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x68, 0x0a, 0x0c, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x22, 0x4a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x0f,
	0x0a, 0x0d, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32,
	0x7e, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x15, 0x2e, 0x64, 0x75, 0x62, 0x65, 0x2e, 0x63, 0x61, 0x74, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x64, 0x75, 0x62, 0x65,
	0x2e, 0x63, 0x61, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3c, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x16,
	0x2e, 0x64, 0x75, 0x62, 0x65, 0x2e, 0x63, 0x61, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x64, 0x75, 0x62, 0x65, 0x2e, 0x63, 0x61,
	0x74, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69,
	0x78, 0x75, 0x65, 0x68, 0x61, 0x6e, 0x2f, 0x64, 0x75, 0x62, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x61, 0x74, 0x3b, 0x63, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_protocol_cat_cat_proto_rawDescOnce sync.Once
	file_internal_protocol_cat_cat_proto_rawDescData = file_internal_protocol_cat_cat_proto_rawDesc
)

func file_internal_protocol_cat_cat_proto_rawDescGZIP() []byte {
	file_internal_protocol_cat_cat_proto_rawDescOnce.Do(func() {
		file_internal_protocol_cat_cat_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_protocol_cat_cat_proto_rawDescData)
	})
	return file_internal_protocol_cat_cat_proto_rawDescData
}

var file_internal_protocol_cat_cat_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_internal_protocol_cat_cat_proto_goTypes = []interface{}{
	(*IdentifyReq)(nil),   // 0: dube.cat.IdentifyReq
	(*IdentifyResp)(nil),  // 1: dube.cat.IdentifyResp
	(*HeartbeatReq)(nil),  // 2: dube.cat.HeartbeatReq
	(*HeartbeatResp)(nil), // 3: dube.cat.HeartbeatResp
}
var file_internal_protocol_cat_cat_proto_depIdxs = []int32{
	0, // 0: dube.cat.cat.Identify:input_type -> dube.cat.IdentifyReq
	2, // 1: dube.cat.cat.Heartbeat:input_type -> dube.cat.HeartbeatReq
	1, // 2: dube.cat.cat.Identify:output_type -> dube.cat.IdentifyResp
	3, // 3: dube.cat.cat.Heartbeat:output_type -> dube.cat.HeartbeatResp
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_protocol_cat_cat_proto_init() }
func file_internal_protocol_cat_cat_proto_init() {
	if File_internal_protocol_cat_cat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_protocol_cat_cat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_protocol_cat_cat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentifyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_protocol_cat_cat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_protocol_cat_cat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_protocol_cat_cat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_protocol_cat_cat_proto_goTypes,
		DependencyIndexes: file_internal_protocol_cat_cat_proto_depIdxs,
		MessageInfos:      file_internal_protocol_cat_cat_proto_msgTypes,
	}.Build()
	File_internal_protocol_cat_cat_proto = out.File
	file_internal_protocol_cat_cat_proto_rawDesc = nil
	file_internal_protocol_cat_cat_proto_goTypes = nil
	file_internal_protocol_cat_cat_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CatClient is the client API for Cat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CatClient interface {
	Identify(ctx context.Context, in *IdentifyReq, opts ...grpc.CallOption) (*IdentifyResp, error)
	Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc.CallOption) (*HeartbeatResp, error)
}

type catClient struct {
	cc grpc.ClientConnInterface
}

func NewCatClient(cc grpc.ClientConnInterface) CatClient {
	return &catClient{cc}
}

func (c *catClient) Identify(ctx context.Context, in *IdentifyReq, opts ...grpc.CallOption) (*IdentifyResp, error) {
	out := new(IdentifyResp)
	err := c.cc.Invoke(ctx, "/dube.cat.cat/Identify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catClient) Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc.CallOption) (*HeartbeatResp, error) {
	out := new(HeartbeatResp)
	err := c.cc.Invoke(ctx, "/dube.cat.cat/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CatServer is the server API for Cat service.
type CatServer interface {
	Identify(context.Context, *IdentifyReq) (*IdentifyResp, error)
	Heartbeat(context.Context, *HeartbeatReq) (*HeartbeatResp, error)
}

// UnimplementedCatServer can be embedded to have forward compatible implementations.
type UnimplementedCatServer struct {
}

func (*UnimplementedCatServer) Identify(context.Context, *IdentifyReq) (*IdentifyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Identify not implemented")
}
func (*UnimplementedCatServer) Heartbeat(context.Context, *HeartbeatReq) (*HeartbeatResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}

func RegisterCatServer(s *grpc.Server, srv CatServer) {
	s.RegisterService(&_Cat_serviceDesc, srv)
}

func _Cat_Identify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdentifyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatServer).Identify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dube.cat.cat/Identify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatServer).Identify(ctx, req.(*IdentifyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cat_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dube.cat.cat/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatServer).Heartbeat(ctx, req.(*HeartbeatReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dube.cat.cat",
	HandlerType: (*CatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Identify",
			Handler:    _Cat_Identify_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _Cat_Heartbeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/protocol/cat/cat.proto",
}
